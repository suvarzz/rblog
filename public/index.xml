<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>https://suvar.netlify.com/</link>
      <atom:link href="https://suvar.netlify.com/index.xml" rel="self" type="application/rss+xml" />
    <description></description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2019</copyright><lastBuildDate>Wed, 31 Jul 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://suvar.netlify.com/img/logo.png</url>
      <title></title>
      <link>https://suvar.netlify.com/</link>
    </image>
    
    <item>
      <title>Polycomb and Trithorax group proteins</title>
      <link>https://suvar.netlify.com/post/epigenetics/pcg_trx/pcg_trx/</link>
      <pubDate>Wed, 31 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://suvar.netlify.com/post/epigenetics/pcg_trx/pcg_trx/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#polycomb-group-pcg-proteins&#34;&gt;Polycomb group PcG proteins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#prc1&#34;&gt;PRC1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#prc2&#34;&gt;PRC2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pho-complex&#34;&gt;Pho-complex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mechanisms-of-inactivation-of-gene-expression&#34;&gt;Mechanisms of inactivation of gene expression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#trxg-complex-components&#34;&gt;TrxG complex components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pcgtrxg-response-elements&#34;&gt;PcG/TrxG response elements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#nuclear-architecture&#34;&gt;Nuclear architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#open-questions&#34;&gt;Open questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#glossary&#34;&gt;Glossary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cited-literature&#34;&gt;Cited literature&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;polycomb-group-pcg-proteins&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Polycomb group PcG proteins&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Polycomb group&lt;/strong&gt; (PcG) proteins generally maintain gene repression, whereas &lt;strong&gt;Trithorax group&lt;/strong&gt; (TrxG) proteins maintain the active gene expression.&lt;/p&gt;
&lt;p&gt;PcG and TrxG proteins were initially isolated in &lt;em&gt;Drosophila&lt;/em&gt; as factors involved in maintaining the expression patterns of HOX genes, which encode transcription factors that are important determinants of patterning during embryonic development.&lt;/p&gt;
&lt;p&gt;In mammals, PRCs are targeted to a subset of CpG islands (CGIs) at the promoters of developmental genes and prevent unscheduled cellular differentiation.&lt;/p&gt;
&lt;p&gt;In &lt;em&gt;drosophila&lt;/em&gt; PcG proteins form &lt;em&gt;Polycomb repressive complex 1&lt;/em&gt; (&lt;strong&gt;PRC1&lt;/strong&gt;), &lt;em&gt;Polycomb repressive complex 2&lt;/em&gt; (&lt;strong&gt;PRC2&lt;/strong&gt;) and &lt;em&gt;Pleiohomeotic&lt;/em&gt; (Pho) &lt;em&gt;repressive complex&lt;/em&gt; (&lt;strong&gt;PhoRC&lt;/strong&gt;). PRC2 and PRC1 are recruited to chromatin by PhoRC which directly binds &lt;em&gt;polycomb response elements&lt;/em&gt; (&lt;strong&gt;PREs&lt;/strong&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;prc1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;PRC1&lt;/h2&gt;
&lt;p&gt;PRC1 ubiquitinylates histone H2AK119 (H2AK118 in Drosophila) and alter chromatin structure whereas PRC2 trimethylates histone H3K27.&lt;/p&gt;
&lt;p&gt;PRC1 is composed of the core components &lt;strong&gt;Polycomb&lt;/strong&gt; (Pc), &lt;strong&gt;Polyhomeotic&lt;/strong&gt; (Ph), &lt;strong&gt;Posterior sex combs&lt;/strong&gt; (Psc) and &lt;strong&gt;Sex combs extra&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Pc can bind the H3K27me3 that facilitate anchoring the complex to chromatin.&lt;/p&gt;
&lt;p&gt;Psc and Sce form a heterodimer, which enhances the E3 ubiquitin ligase activity of the complex. This activity is provided by the Sce subunit of&lt;/p&gt;
&lt;p&gt;PRC1, which monoubiquitylates H2AK118 (K119 in mammals). This ubiquitylation event is thought to restrict RNA polymerase II (Pol II) elongation, but was also shown to recruit PRC2 members.&lt;/p&gt;
&lt;p&gt;Ph subunit is able to bind itself that promotes spreading of PRC1 complex.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;prc2&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;PRC2&lt;/h2&gt;
&lt;p&gt;PRC2 core complex is composed of &lt;strong&gt;Enhancer of zeste&lt;/strong&gt; E(z), &lt;strong&gt;Suppressor of zeste 12&lt;/strong&gt; Su(z)12, &lt;strong&gt;Extra sex combs&lt;/strong&gt; (Esc) and &lt;strong&gt;p55&lt;/strong&gt; (Nurf55 or Caf1).&lt;/p&gt;
&lt;p&gt;E(z) methylate H3K27.&lt;/p&gt;
&lt;p&gt;Esc bind H3K27me3 and facilitates multimerization of complex.&lt;/p&gt;
&lt;p&gt;PRC1-mediated events are also thought to compact chromatin to limit the access of activating factors and the Psc subunit in particular has been linked to this function.&lt;/p&gt;
&lt;p&gt;p55 is present in a number of chromatin remodeling complexes and interacts with Su(z)12, H3 and H4. The loss of loss of p55 appears to have little consequence on PRC2 activity.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;pho-complex&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Pho-complex&lt;/h2&gt;
&lt;p&gt;The first complex, referred to as Pho repressive complex (PhoRC), is composed of Pho and Sfmbt. A second Pho-containing complex has also been described (Pho-INO80) that, in addition to Pho, contains the INO80 nucleosome remodeling complex (Klymenko, 2006). Pho binds DNA in a sequence-specific manner and help to recruit PcG complexes to their response elements (Grossniklaus and Paro, 2014).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;mechanisms-of-inactivation-of-gene-expression&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Mechanisms of inactivation of gene expression&lt;/h2&gt;
&lt;p&gt;After the initial recruitment of PRC2 and PRC1 by Pho protein, Enhancer of zeste &lt;strong&gt;E(z)&lt;/strong&gt;, a member of PRC2, methylate H3 histone (H3K27me3) at both PREs and along the gene body. This modification is then recognized by Pc, a member of PRC1, which, in turn, ubiquitylates H2A119 via Sex combs extra (&lt;strong&gt;Sce&lt;/strong&gt;), another PRC1 member, and stabilizes PRC2. The accumulation of PRC1 and PRC2 within gene bodies results in the compaction of local nucleosomes and the further silencing of the inactive genes.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;trxg-complex-components&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;TrxG complex components&lt;/h2&gt;
&lt;p&gt;TrxG include the COMPASS, COMPASS-like, TAC1 and ASH1 complexes, and SET domain HMTs.&lt;/p&gt;
&lt;p&gt;Common subunits for COMPASS and COMPASS-like complexes include Ash2, Dpy30 (Dpy-30L1), Hcf1 (Hcf), Rbbp5 and Wds.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;pcgtrxg-response-elements&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;PcG/TrxG response elements&lt;/h2&gt;
&lt;p&gt;In Drosophila, the genomic nucleation sites of PcG- and TrxG-mediated epigenetic memory have been referred to as PcG/TrxG response elements (PRE/TREs).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;nuclear-architecture&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Nuclear architecture&lt;/h2&gt;
&lt;p&gt;Nuclear architecture by PRC1 complex is disscussed in the recent review &lt;span class=&#34;citation&#34;&gt;(Illingworth 2019)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;open-questions&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Open questions&lt;/h2&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Although some PRE/TRE-like elements have been identified, it is unclear if all of the properties of the Drosophila PRE/TRE (e.g. epigenetic memory) are maintained in the mammalian system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How PcG and TrxG proteins are recruited to these elements?&lt;br /&gt;
We currently lack a clear understanding of the hierarchical recruitment of PcG and TrxG proteins to PRE/TREs, and elucidating these recruitment mechanisms is thus an area of active research.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What determines the active (TRE) versus repressed (PRE) state?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What factors d which PRC1 targets will physically interact?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the impact of stoichiometry of PRC1 subunits during development?&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This page summarizes several recent reviews &lt;span class=&#34;citation&#34;&gt;(Geisler and Paro 2015)&lt;/span&gt; to aggregate information in this actively studied area of research.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;glossary&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Glossary&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;PRC1&lt;/strong&gt; - Polycomb Repressive Complex 1&lt;br /&gt;
&lt;strong&gt;PRC2&lt;/strong&gt; - Polycomb Repressive Complex 2&lt;br /&gt;
&lt;strong&gt;Pho&lt;/strong&gt; - Pleiohomeotic&lt;br /&gt;
&lt;strong&gt;PhoRC&lt;/strong&gt; - Pleiohomeotic Repressive Complex&lt;br /&gt;
&lt;strong&gt;PREs&lt;/strong&gt; - Polycomb Response Elements&lt;br /&gt;
&lt;strong&gt;Psc&lt;/strong&gt; - Posterior Sex Combs&lt;br /&gt;
&lt;strong&gt;E(z)&lt;/strong&gt; - Enhancer of zeste&lt;br /&gt;
&lt;strong&gt;Su(z)12&lt;/strong&gt; - Suppressor of zeste 12&lt;br /&gt;
&lt;strong&gt;Esc&lt;/strong&gt; - Extra sex combs&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;cited-literature&#34; class=&#34;section level2 unnumbered&#34;&gt;
&lt;h2&gt;Cited literature&lt;/h2&gt;
&lt;div id=&#34;refs&#34; class=&#34;references&#34;&gt;
&lt;div id=&#34;ref-geisler_trithorax_2015&#34;&gt;
&lt;p&gt;Geisler, Sarah J., and Renato Paro. 2015. “Trithorax and Polycomb Group-Dependent Regulation: A Tale of Opposing Activities.” &lt;em&gt;Development&lt;/em&gt; 142 (17): 2876–87. doi:&lt;a href=&#34;https://doi.org/10.1242/dev.120030&#34;&gt;10.1242/dev.120030&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-illingworth_chromatin_2019&#34;&gt;
&lt;p&gt;Illingworth, Robert S. 2019. “Chromatin Folding and Nuclear Architecture: PRC1 Function in 3d.” &lt;em&gt;Current Opinion in Genetics &amp;amp; Development&lt;/em&gt; 55 (July): 82–90. doi:&lt;a href=&#34;https://doi.org/10.1016/j.gde.2019.06.006&#34;&gt;10.1016/j.gde.2019.06.006&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R tips and coding tricks</title>
      <link>https://suvar.netlify.com/post/r/r_tips_tricks/r_tips_tricks/</link>
      <pubDate>Wed, 31 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://suvar.netlify.com/post/r/r_tips_tricks/r_tips_tricks/</guid>
      <description>


&lt;p&gt;Here you can find some simple interesting concepts for coding in R.&lt;/p&gt;
&lt;div id=&#34;how-to-select-all-numeric-columns-in-a-data-frame&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;How to select all numeric columns in a data frame?&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df = data.frame(x = c(1:3),
                y = c(&amp;#39;A&amp;#39;,&amp;#39;B&amp;#39;,&amp;#39;C&amp;#39;),
                z = c(0.1, 0.2, 0.3))
df&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   x y   z
## 1 1 A 0.1
## 2 2 B 0.2
## 3 3 C 0.3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Select all numeric columns
df[sapply(df,is.numeric)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   x   z
## 1 1 0.1
## 2 2 0.2
## 3 3 0.3&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Simple Markov process</title>
      <link>https://suvar.netlify.com/post/r/simple_markov_process/simple_markov_process/</link>
      <pubDate>Wed, 31 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://suvar.netlify.com/post/r/simple_markov_process/simple_markov_process/</guid>
      <description>


&lt;p&gt;Here, we will consider a simple example of Markov process with implementation in R.&lt;br /&gt;
The following example is taken from &lt;a href=&#34;http://www.bodowinter.com&#34;&gt;Bodo Winter website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;Markov process&lt;/strong&gt; is characterized by (1) &lt;strong&gt;a finite set of states&lt;/strong&gt; and (2) &lt;strong&gt;fixed transition probabilities between the states&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Let’s consider an example. Assume you have a classroom, with students who could be either in the state &lt;strong&gt;alert&lt;/strong&gt; or in the state &lt;strong&gt;bored&lt;/strong&gt;. And then, at any given time point, there’s a certain probability of an alert student becoming bored (say 0.2), and there’s a probability of a bored student becoming alert (say 0.25).&lt;/p&gt;
&lt;p&gt;Let’s say there are 20 alert and 80 bored students in a particular class. This is your initial condition at time point &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt;. Given the transition probabilities above, what’s the number of alert and bored students at the next point in time, &lt;span class=&#34;math inline&#34;&gt;\(t+1\)&lt;/span&gt;?&lt;br /&gt;
Multiply 20 by 0.2 (=4) and these will be the alert students that turn bored.&lt;br /&gt;
And then multiply 80 by 0.25 (=20) and these will be the bored students that turn alert.&lt;br /&gt;
So, at &lt;span class=&#34;math inline&#34;&gt;\(t+1\)&lt;/span&gt;, there’s going to be 20-4+20 alert students. And there’s going to be 80+4-20 bored students. Before, 80% of the students were bored and now, only 64% of the students are bored. Conversely, 36% are alert.&lt;/p&gt;
&lt;p&gt;A handy way of representing this Markov process is by defining a transition probability matrix:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;A&lt;/th&gt;
&lt;th&gt;B&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;A&lt;span class=&#34;math inline&#34;&gt;\(_{t+1}\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;0.8&lt;/td&gt;
&lt;td&gt;0.25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;B&lt;span class=&#34;math inline&#34;&gt;\(_{t+1}\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;0.2&lt;/td&gt;
&lt;td&gt;0.75&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;What this matrix says is: A proportion of 0.8 of the people who are in state A (alert) will also be at state A at time point &lt;span class=&#34;math inline&#34;&gt;\(t+1\)&lt;/span&gt;. And, a proportion of 0.25 of the people who are in state B (bored) will switch to alert at t+1. This is what the first row says. The next row is simply one minus the probabilities of the first row, because probabilities (or proportions) have to add up to 1. Now think about multiplying this matrix with the initial proportions of alert and bored students that we had above. 0.8 are bored and 0.2 are alert. In linear algebra this would look the following way:&lt;/p&gt;
&lt;div&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
 0.8 &amp;amp; 0.25 \\
 0.2 &amp;amp; 0.75
\end{bmatrix}\times\begin{bmatrix}
 0.2 \\
 0.8
\end{bmatrix} = \begin{bmatrix}
 0.8\times0.2 + 0.25\times0.8 \\
 0.2\times0.2 + 0.75\times0.8
\end{bmatrix} = \begin{bmatrix}
0.36 \\
0.64
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The results of these calculations are exactly the proportions that we saw above: 36% alert student and 64% bored students.&lt;/p&gt;
&lt;p&gt;Now, you might ask yourself: What happens if this process continues? What happens at &lt;span class=&#34;math inline&#34;&gt;\(t+2\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(t+3\)&lt;/span&gt; etc.? Will it be the case that at one point there are no bored students any more? Let’s simulate this in R and find out! Let’s call this &lt;strong&gt;tpm&lt;/strong&gt; for &lt;strong&gt;transition probability matrix&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tpm = matrix(c(0.8,0.25, 0.2,0.75), nrow=2, byrow=TRUE)
colnames(tpm) = c(&amp;#39;A&amp;#39;,&amp;#39;B&amp;#39;)
rownames(tpm) = c(&amp;#39;At+1&amp;#39;, &amp;#39;Bt+1&amp;#39;)
tpm&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        A    B
## At+1 0.8 0.25
## Bt+1 0.2 0.75&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Again this matrix shows that 0.8 students who were in state A at time point t will still be in state A at &lt;span class=&#34;math inline&#34;&gt;\(t+1\)&lt;/span&gt;. And 0.25 students who were in state B at time point t will be in state A at &lt;span class=&#34;math inline&#34;&gt;\(t+1\)&lt;/span&gt;. The second row has a similar interpretation for alert and bored students becoming bored at &lt;span class=&#34;math inline&#34;&gt;\(t+1\)&lt;/span&gt;. Remember that Markov processes assume fixed transition probabilities. This means that in the simulation that we’ll be doing, we leave the transition probability matrix unchanged. However, we will define a vector of the actual proportions – and these are allowed to change. In time, we expect more and more students to become alert, because the transition probability from B to A (which, to remind you, was 0.25) is higher than from A to B (which was 0.2).&lt;/p&gt;
&lt;p&gt;Let’s start our simulation by setting the initial condition as 0.1 students are alert and 0.9 students are bored and define a matrix called &lt;strong&gt;sm&lt;/strong&gt; (short for &lt;strong&gt;student matrix&lt;/strong&gt;):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sm = as.matrix(c(0.1, 0.9))
rownames(sm)= c(&amp;#39;A&amp;#39;, &amp;#39;B&amp;#39;)
sm&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   [,1]
## A  0.1
## B  0.9&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now let’s repeat by looping:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;for(i in 1:10){
    sm = tpm %*% sm
    }&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here, we’re looping 10 times and on each iteration, we multiply the matrix &lt;strong&gt;tpm&lt;/strong&gt; with the student matrix &lt;strong&gt;sm&lt;/strong&gt;. We take this result and store it in &lt;strong&gt;sm&lt;/strong&gt;. This means that at the next iteration, our fixed &lt;strong&gt;transition probability matrix&lt;/strong&gt; will be multiplied by a different student matrix, allowing for the proportions to slowly change over time.&lt;br /&gt;
R operator ’%*%’ is used for matrix multiplication&lt;/p&gt;
&lt;p&gt;Outcome of our ten loop iterations:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sm&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##           [,1]
## At+1 0.5544017
## Bt+1 0.4455983&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, after 10 iterations of the Markov process, we now have about 55% alert students and 45% bored ones. What is interesting to me is that even though 80% of the people who are alert at one time point remain alert at the next time point, the process only converged on 55% alert and 45% bored after 10 iterations.&lt;/p&gt;
&lt;p&gt;Let’s reset our initial condition to (0.1 alert and 0.9 bored students) and run a thousand iterations.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;for(i in 1:1000){
    sm = tpm %*% sm
    }
sm&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##           [,1]
## At+1 0.5555556
## Bt+1 0.4444444&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A 1000 iterations, and we seem to be zoning in onto ~55% and ~44%. This phenomenon is called &lt;strong&gt;Markov convergence&lt;/strong&gt;. You could run even more iterations, and your outcome would get closer and closer to 0.5555 (to infinity). So, the model converges on an equilibrium. However, this is not a fixed equilibrium. It’s not the case that the Markov process comes to a hold or that nobody changes states between alertness and boredness any more. The equilibrium that we’re dealing with here is a statistical equilibrium, where the proportions of alert and bored students remain the same. but there still is constant change (at each time step, 0.2 alert students become bored and 0.25 bored students become alert). Markov models always converge to a statistical equilibrium if the conditions (1) and (2) above are met, and if you can get from any state within your Markov model to any other state (in the case of just two states, that clearly is the case). What’s so cool about this is that it is, at first sight, fairly counterintuitive.&lt;/p&gt;
&lt;p&gt;At least when I thought about the transition probabilities for the first time, I somehow expected all students to become alert but as we saw, that’s not the case. Moreover, this process is not sensitive to initial conditions. That means that when you start with any proportion of alert or bored students (even extreme ones such as 0.0001 alert students), the process will reach the statistical equilibrium – albeit sometimes a little faster or slower. You can play around with different values for the &lt;strong&gt;sm&lt;/strong&gt; object to explore this property of Markov convergence. Another interesting thing is that the process is impervious to intervention: Say, you introduced something that made more students alert – the Markov model would quickly get back to equilibrium. So Markov processes are essentially ahistorical processes: history doesn’t matter. Even with extreme initial conditions or extreme interventions, the process quickly converges to the equilibrium defined by the transition probabilities. The only way to persistently change the system is to change the transition probabilities. Finally, what I find so cool about Markov processes is their computational simplicity.&lt;/p&gt;
&lt;div id=&#34;sources&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Sources&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://www.bodowinter.com&#34;&gt;Bodo Winter website&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
